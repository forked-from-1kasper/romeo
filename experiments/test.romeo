postulate A B C D : U

definition test X :=
∀ (x : X), x = x ⊃ ⊤ ⊃ ∃ (f : Hom C x x),
    f ∘ f ∘ f ∘ f ∘ f = id x
  ∧ f ∘ f = id x ∧ (f ∘ f ∘ f = f ∨ f ∘ f = f)

definition test′ X Y :=
∀ (x : X) (y : Y), ∃ (f : Hom U X Y), f x = y

definition test″ :=
∀ (C : U), C = C ⇒ C = C ⊃ C = C ⊃ C = C

definition diag A :=
A × A


#infer Hom U₂ U₁ U₁

#eval U₃

postulate F : Hom U A B
postulate G : Hom U B C
postulate H : Hom U C D

#eval (H ∘ G) ∘ id B ∘ (F ∘ id A)

postulate x y z : A
postulate f : Hom A x y
postulate g : Hom A y z

#eval (G ∘ F) (g ∘ f)

postulate ρ : Hom U (Hom A x z) A
#eval ρ (g ∘ f)

postulate ρ′ : Hom U (Hom A x x) A

#eval ρ′ (id x)
#eval ρ′ (id (id x))

#infer ε (T : U), ∀ (C : U), ∃ (f : Hom U C T), ∀ (C′ : U) (g : Hom U C C′), ∃ (h : Hom U T C′), g = h ∘ f
#infer ε (1 : C), ∀ (c : C), ∃! (f : Hom C 1 c), ⊤

lemma lem1 : ∀ (f : Hom A x x), f = f :=
λ f, refl f

axiom ax1 : ∃ (g : Hom A x x), g = g ∘ g

NB that’s a comment

lemma lem2 : ∀ (f : Hom A x x), f ∘ f = f ⊃ f ∘ f = f ∘ f ∘ f :=
λ f H, have H′ : f = f ∘ f => symm H in subst g (f ∘ f = f ∘ g) H′ (refl (f ∘ f))
